#####################################################################
#   Basic Macros for Start and End jobs
#####################################################################

[gcode_macro PRINT_START]
description: Execute at the start of every print
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|int %}
    {% set STARTUP_TEMP = printer['gcode_macro _USER_VARIABLE'].max_tap_temp %}

    CLEAR_PAUSE
    M140 S{BED_TEMP}               ; start heating up bed
    SET_DISPLAY_TEXT MSG="Hotend for TAP: {STARTUP_TEMP}c"  
    M104 S{STARTUP_TEMP}           ; start getting the hotend to bed safe temp

    G32                            ; home all axes
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER_TEMP}   ; wait for chamber temp
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    BED_MESH_CLEAR                 ; clear any existing mesh calibration
    BED_MESH_CALIBRATE             ; use KAMP to create mesh on print area ONLY

    SET_DISPLAY_TEXT MSG="Bed: {BED_TEMP}c"        
    M190 S{BED_TEMP}               ; wait for bed to reach temperature
    SET_DISPLAY_TEXT MSG="Hotend: {EXTRUDER_TEMP}c"      
    M109 S{EXTRUDER_TEMP}          ; set and wait for nozzle to reach temperature

    {% if BED_TEMP > 70 %}
      SET_FAN_SPEED FAN=Nevermore SPEED=1   ; turn on Nevermore for ABS, ASA, etc (not PLA)
    {% endif %}

    SET_DISPLAY_TEXT MSG="Cleaning Nozzle"    
    CLEAN_NOZZLE
    SET_DISPLAY_TEXT MSG="Printing Line Purge"     
    LINE_PURGE                     ; clean nozzle by printing a line next to print area

    SFS_ENABLE                     ; enable filament runout sensor
    SET_DISPLAY_TEXT MSG="Printing file..." 

[gcode_macro PRINT_END]
description: Execute at the end of the print
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SFS_DISABLE  ; disable filament runuot sensor
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=FILTER_OFF DURATION=180  ; turn off Nevermore after 3min if ON
    EXHAUST_FAN_AUTO                         ; return chamber fan to auto mode if it was forced on
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    CLEAN_NOZZLE                             ; Clean nozzle after each print
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M84                                      ; disable steppers
    
    BED_MESH_CLEAR
    UPDATE_DELAYED_GCODE ID=CLEAR_DISPLAY DURATION=60

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END