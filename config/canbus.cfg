# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

# Diego Terzano 07/23/2023 
# SB 2240 CANBus Setup

[mcu can0]
canbus_uuid: 2aa29d8693b9

## Hotend: Revo Voron 
##   https://e3d-online.zendesk.com/hc/en-us/articles/5927310441373-Revo-Voron-Datasheet
## Extruder: Bondtech LGX 
##   https://www.bondtech.se/product/lgx-large-gears-extruder/
[extruder]
step_pin: can0:PD0
dir_pin: can0:PD1
enable_pin: !can0:PD2
heater_pin: can0:PB13

pwm_cycle_time: 0.02
smooth_time: 0.5
max_power: 0.8
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: can0:PA3

# To test extruder without the nozzle 
#min_extrude_temp: 20
min_extrude_temp: 180

min_temp: 0
max_temp: 305


nozzle_diameter: 0.400
#nozzle_diameter: 0.600
filament_diameter: 1.750

# tuning - for edges
pressure_advance: 0.0815  # for 0.4mm nozzle

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
rotation_distance: 22.7016300511  # Calibrated 09/18/2023
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree

max_extrude_only_distance: 500.0
max_extrude_cross_section: 5    #for line purge KAMP

[tmc2240 extruder]
cs_pin: can0:PA15
spi_software_sclk_pin: can0:PB10
spi_software_mosi_pin: can0:PB11
spi_software_miso_pin: can0:PB2
driver_TPFD: 0
run_current: 0.650
stealthchop_threshold: 999999

#####################################################################
#   Fan Control
#####################################################################

[fan]
pin: can0:PA1
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
pin: can0:PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0
off_below: 0

#####################################################################
#   LED Control
#####################################################################
[neopixel hotend_rgb]
pin: can0:PD3
chain_count: 3
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0

#####################################################################
#   Probe TAP
#####################################################################

##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: can0:PB5
x_offset: 0
y_offset: 0
#z_offset: 0   # use override from calibration
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 4
activate_gcode:
    {% set PROBE_TEMP = printer['gcode_macro _USER_VARIABLE'].max_tap_temp %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
